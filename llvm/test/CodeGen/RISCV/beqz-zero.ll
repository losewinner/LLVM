; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv32 -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefixes=RV32 %s
; RUN: llc -mtriple=riscv64 -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefixes=RV64 %s


define i32 @foo(i32 %0, i1 %1) {
; RV32-LABEL: foo:
; RV32:       # %bb.0:
; RV32-NEXT:    andi a1, a1, 1
; RV32-NEXT:    beqz a1, .LBB0_3
; RV32-NEXT:  # %bb.1:
; RV32-NEXT:    not a0, a0
; RV32-NEXT:    slli a0, a0, 18
; RV32-NEXT:    srli a0, a0, 31
; RV32-NEXT:    bnez a0, .LBB0_4
; RV32-NEXT:  .LBB0_3:
; RV32-NEXT:    lui a0, 912096
; RV32-NEXT:    addi a0, a0, -1330
; RV32-NEXT:    ret
; RV32-NEXT:  .LBB0_4:
; RV32-NEXT:    li a0, 1
; RV32-NEXT:    ret
;
; RV64-LABEL: foo:
; RV64:       # %bb.0:
; RV64-NEXT:    andi a1, a1, 1
; RV64-NEXT:    beqz a1, .LBB0_3
; RV64-NEXT:  # %bb.1:
; RV64-NEXT:    not a0, a0
; RV64-NEXT:    slli a0, a0, 50
; RV64-NEXT:    srli a0, a0, 63
; RV64-NEXT:    bnez a0, .LBB0_4
; RV64-NEXT:  .LBB0_3:
; RV64-NEXT:    lui a0, 912096
; RV64-NEXT:    addiw a0, a0, -1330
; RV64-NEXT:    ret
; RV64-NEXT:  .LBB0_4:
; RV64-NEXT:    li a0, 1
; RV64-NEXT:    ret
  br i1 %1, label %3, label %7

3:                                                ; preds = %2
  %4 = lshr i32 %0, 13
  %5 = and i32 %4, 1
  %6 = xor i32 %5, 1
  br label %7

7:                                                ; preds = %3, %2
  %8 = phi i32 [ %6, %3 ], [ 0, %2 ]
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, i32 -559023410, i32 1
  ret i32 %10
}


