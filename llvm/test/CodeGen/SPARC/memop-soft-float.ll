; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=sparc < %s | FileCheck %s -check-prefix SPARC-32
; RUN: llc -mtriple=sparc64 < %s | FileCheck %s -check-prefix SPARC-64

define void @memop_soft_float() "use-soft-float"="true" {
; SPARC-32-LABEL: memop_soft_float:
; SPARC-32:         .cfi_startproc
; SPARC-32-NEXT:  ! %bb.0:
; SPARC-32-NEXT:    mov 28, %o0
; SPARC-32-NEXT:    ld [%o0], %o1
; SPARC-32-NEXT:    st %o1, [%o0]
; SPARC-32-NEXT:    mov 24, %o1
; SPARC-32-NEXT:    ld [%o1], %o2
; SPARC-32-NEXT:    st %o2, [%o1]
; SPARC-32-NEXT:    mov 20, %o2
; SPARC-32-NEXT:    ld [%o2], %o3
; SPARC-32-NEXT:    st %o3, [%o2]
; SPARC-32-NEXT:    mov 16, %o3
; SPARC-32-NEXT:    ld [%o3], %o4
; SPARC-32-NEXT:    st %o4, [%o3]
; SPARC-32-NEXT:    mov 12, %o4
; SPARC-32-NEXT:    ld [%o4], %o5
; SPARC-32-NEXT:    st %o5, [%o4]
; SPARC-32-NEXT:    mov 8, %o5
; SPARC-32-NEXT:    ld [%o5], %g2
; SPARC-32-NEXT:    st %g2, [%o5]
; SPARC-32-NEXT:    mov 4, %g2
; SPARC-32-NEXT:    ld [%g2], %g3
; SPARC-32-NEXT:    st %g3, [%g2]
; SPARC-32-NEXT:    ld [%g0], %g3
; SPARC-32-NEXT:    st %g3, [%g0]
; SPARC-32-NEXT:    st %g0, [%o0]
; SPARC-32-NEXT:    st %g0, [%o1]
; SPARC-32-NEXT:    st %g0, [%o2]
; SPARC-32-NEXT:    st %g0, [%o3]
; SPARC-32-NEXT:    st %g0, [%o4]
; SPARC-32-NEXT:    st %g0, [%o5]
; SPARC-32-NEXT:    st %g0, [%g2]
; SPARC-32-NEXT:    retl
; SPARC-32-NEXT:    st %g0, [%g0]
;
; SPARC-64-LABEL: memop_soft_float:
; SPARC-64:         .cfi_startproc
; SPARC-64-NEXT:  ! %bb.0:
; SPARC-64-NEXT:    mov 24, %o0
; SPARC-64-NEXT:    ldx [%o0], %o1
; SPARC-64-NEXT:    stx %o1, [%o0]
; SPARC-64-NEXT:    mov 16, %o1
; SPARC-64-NEXT:    ldx [%o1], %o2
; SPARC-64-NEXT:    stx %o2, [%o1]
; SPARC-64-NEXT:    mov 8, %o2
; SPARC-64-NEXT:    ldx [%o2], %o3
; SPARC-64-NEXT:    stx %o3, [%o2]
; SPARC-64-NEXT:    ldx [%g0], %o3
; SPARC-64-NEXT:    stx %o3, [%g0]
; SPARC-64-NEXT:    stx %g0, [%o0]
; SPARC-64-NEXT:    stx %g0, [%o1]
; SPARC-64-NEXT:    stx %g0, [%o2]
; SPARC-64-NEXT:    retl
; SPARC-64-NEXT:    stx %g0, [%g0]
    call void @llvm.memcpy.p0.p0.i32(ptr null, ptr null, i32 32, i1 true)
    call void @llvm.memset.p0.i32(ptr null, i8 0, i32 32, i1 true)
    ret void
}

define void @memop_noimplicitfloat() noimplicitfloat {
; SPARC-32-LABEL: memop_noimplicitfloat:
; SPARC-32:         .cfi_startproc
; SPARC-32-NEXT:  ! %bb.0:
; SPARC-32-NEXT:    mov 28, %o0
; SPARC-32-NEXT:    ld [%o0], %o1
; SPARC-32-NEXT:    st %o1, [%o0]
; SPARC-32-NEXT:    mov 24, %o1
; SPARC-32-NEXT:    ld [%o1], %o2
; SPARC-32-NEXT:    st %o2, [%o1]
; SPARC-32-NEXT:    mov 20, %o2
; SPARC-32-NEXT:    ld [%o2], %o3
; SPARC-32-NEXT:    st %o3, [%o2]
; SPARC-32-NEXT:    mov 16, %o3
; SPARC-32-NEXT:    ld [%o3], %o4
; SPARC-32-NEXT:    st %o4, [%o3]
; SPARC-32-NEXT:    mov 12, %o4
; SPARC-32-NEXT:    ld [%o4], %o5
; SPARC-32-NEXT:    st %o5, [%o4]
; SPARC-32-NEXT:    mov 8, %o5
; SPARC-32-NEXT:    ld [%o5], %g2
; SPARC-32-NEXT:    st %g2, [%o5]
; SPARC-32-NEXT:    mov 4, %g2
; SPARC-32-NEXT:    ld [%g2], %g3
; SPARC-32-NEXT:    st %g3, [%g2]
; SPARC-32-NEXT:    ld [%g0], %g3
; SPARC-32-NEXT:    st %g3, [%g0]
; SPARC-32-NEXT:    st %g0, [%o0]
; SPARC-32-NEXT:    st %g0, [%o1]
; SPARC-32-NEXT:    st %g0, [%o2]
; SPARC-32-NEXT:    st %g0, [%o3]
; SPARC-32-NEXT:    st %g0, [%o4]
; SPARC-32-NEXT:    st %g0, [%o5]
; SPARC-32-NEXT:    st %g0, [%g2]
; SPARC-32-NEXT:    retl
; SPARC-32-NEXT:    st %g0, [%g0]
;
; SPARC-64-LABEL: memop_noimplicitfloat:
; SPARC-64:         .cfi_startproc
; SPARC-64-NEXT:  ! %bb.0:
; SPARC-64-NEXT:    mov 24, %o0
; SPARC-64-NEXT:    ldx [%o0], %o1
; SPARC-64-NEXT:    stx %o1, [%o0]
; SPARC-64-NEXT:    mov 16, %o1
; SPARC-64-NEXT:    ldx [%o1], %o2
; SPARC-64-NEXT:    stx %o2, [%o1]
; SPARC-64-NEXT:    mov 8, %o2
; SPARC-64-NEXT:    ldx [%o2], %o3
; SPARC-64-NEXT:    stx %o3, [%o2]
; SPARC-64-NEXT:    ldx [%g0], %o3
; SPARC-64-NEXT:    stx %o3, [%g0]
; SPARC-64-NEXT:    stx %g0, [%o0]
; SPARC-64-NEXT:    stx %g0, [%o1]
; SPARC-64-NEXT:    stx %g0, [%o2]
; SPARC-64-NEXT:    retl
; SPARC-64-NEXT:    stx %g0, [%g0]
    call void @llvm.memcpy.p0.p0.i32(ptr null, ptr null, i32 32, i1 true)
    call void @llvm.memset.p0.i32(ptr null, i8 0, i32 32, i1 true)
    ret void
}

declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) nocallback nofree nounwind willreturn memory(argmem: write)
