; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=mips < %s | FileCheck %s -check-prefix MIPS-32-BE
; RUN: llc -mtriple=mipsel < %s | FileCheck %s -check-prefix MIPS-32-LE
; RUN: llc -mtriple=mips64 < %s | FileCheck %s -check-prefix MIPS-64-BE
; RUN: llc -mtriple=mips64el < %s | FileCheck %s -check-prefix MIPS-64-LE

define void @memop_soft_float() "use-soft-float"="true" {
; MIPS-32-BE-LABEL: memop_soft_float:
; MIPS-32-BE:       # %bb.0:
; MIPS-32-BE-NEXT:    addiu $1, $zero, 20
; MIPS-32-BE-NEXT:    addiu $2, $zero, 16
; MIPS-32-BE-NEXT:    addiu $3, $zero, 12
; MIPS-32-BE-NEXT:    addiu $4, $zero, 8
; MIPS-32-BE-NEXT:    lw $5, 0($4)
; MIPS-32-BE-NEXT:    lw $6, 0($3)
; MIPS-32-BE-NEXT:    lw $7, 0($2)
; MIPS-32-BE-NEXT:    lw $8, 0($1)
; MIPS-32-BE-NEXT:    addiu $9, $zero, 24
; MIPS-32-BE-NEXT:    lw $10, 0($9)
; MIPS-32-BE-NEXT:    addiu $11, $zero, 28
; MIPS-32-BE-NEXT:    lw $12, 0($11)
; MIPS-32-BE-NEXT:    sw $12, 0($11)
; MIPS-32-BE-NEXT:    sw $10, 0($9)
; MIPS-32-BE-NEXT:    sw $8, 0($1)
; MIPS-32-BE-NEXT:    sw $7, 0($2)
; MIPS-32-BE-NEXT:    sw $6, 0($3)
; MIPS-32-BE-NEXT:    sw $5, 0($4)
; MIPS-32-BE-NEXT:    addiu $5, $zero, 4
; MIPS-32-BE-NEXT:    lw $6, 0($5)
; MIPS-32-BE-NEXT:    sw $6, 0($5)
; MIPS-32-BE-NEXT:    lw $6, 0($zero)
; MIPS-32-BE-NEXT:    sw $6, 0($zero)
; MIPS-32-BE-NEXT:    sw $zero, 0($11)
; MIPS-32-BE-NEXT:    sw $zero, 0($9)
; MIPS-32-BE-NEXT:    sw $zero, 0($1)
; MIPS-32-BE-NEXT:    sw $zero, 0($2)
; MIPS-32-BE-NEXT:    sw $zero, 0($3)
; MIPS-32-BE-NEXT:    sw $zero, 0($4)
; MIPS-32-BE-NEXT:    sw $zero, 0($5)
; MIPS-32-BE-NEXT:    jr $ra
; MIPS-32-BE-NEXT:    sw $zero, 0($zero)
;
; MIPS-32-LE-LABEL: memop_soft_float:
; MIPS-32-LE:       # %bb.0:
; MIPS-32-LE-NEXT:    addiu $1, $zero, 20
; MIPS-32-LE-NEXT:    addiu $2, $zero, 16
; MIPS-32-LE-NEXT:    addiu $3, $zero, 12
; MIPS-32-LE-NEXT:    addiu $4, $zero, 8
; MIPS-32-LE-NEXT:    lw $5, 0($4)
; MIPS-32-LE-NEXT:    lw $6, 0($3)
; MIPS-32-LE-NEXT:    lw $7, 0($2)
; MIPS-32-LE-NEXT:    lw $8, 0($1)
; MIPS-32-LE-NEXT:    addiu $9, $zero, 24
; MIPS-32-LE-NEXT:    lw $10, 0($9)
; MIPS-32-LE-NEXT:    addiu $11, $zero, 28
; MIPS-32-LE-NEXT:    lw $12, 0($11)
; MIPS-32-LE-NEXT:    sw $12, 0($11)
; MIPS-32-LE-NEXT:    sw $10, 0($9)
; MIPS-32-LE-NEXT:    sw $8, 0($1)
; MIPS-32-LE-NEXT:    sw $7, 0($2)
; MIPS-32-LE-NEXT:    sw $6, 0($3)
; MIPS-32-LE-NEXT:    sw $5, 0($4)
; MIPS-32-LE-NEXT:    addiu $5, $zero, 4
; MIPS-32-LE-NEXT:    lw $6, 0($5)
; MIPS-32-LE-NEXT:    sw $6, 0($5)
; MIPS-32-LE-NEXT:    lw $6, 0($zero)
; MIPS-32-LE-NEXT:    sw $6, 0($zero)
; MIPS-32-LE-NEXT:    sw $zero, 0($11)
; MIPS-32-LE-NEXT:    sw $zero, 0($9)
; MIPS-32-LE-NEXT:    sw $zero, 0($1)
; MIPS-32-LE-NEXT:    sw $zero, 0($2)
; MIPS-32-LE-NEXT:    sw $zero, 0($3)
; MIPS-32-LE-NEXT:    sw $zero, 0($4)
; MIPS-32-LE-NEXT:    sw $zero, 0($5)
; MIPS-32-LE-NEXT:    jr $ra
; MIPS-32-LE-NEXT:    sw $zero, 0($zero)
;
; MIPS-64-BE-LABEL: memop_soft_float:
; MIPS-64-BE:       # %bb.0:
; MIPS-64-BE-NEXT:    daddiu $1, $zero, 16
; MIPS-64-BE-NEXT:    ld $2, 0($1)
; MIPS-64-BE-NEXT:    daddiu $3, $zero, 24
; MIPS-64-BE-NEXT:    ld $4, 0($3)
; MIPS-64-BE-NEXT:    sd $4, 0($3)
; MIPS-64-BE-NEXT:    sd $2, 0($1)
; MIPS-64-BE-NEXT:    daddiu $2, $zero, 8
; MIPS-64-BE-NEXT:    ld $4, 0($2)
; MIPS-64-BE-NEXT:    sd $4, 0($2)
; MIPS-64-BE-NEXT:    ld $4, 0($zero)
; MIPS-64-BE-NEXT:    sd $4, 0($zero)
; MIPS-64-BE-NEXT:    sd $zero, 0($3)
; MIPS-64-BE-NEXT:    sd $zero, 0($1)
; MIPS-64-BE-NEXT:    sd $zero, 0($2)
; MIPS-64-BE-NEXT:    jr $ra
; MIPS-64-BE-NEXT:    sd $zero, 0($zero)
;
; MIPS-64-LE-LABEL: memop_soft_float:
; MIPS-64-LE:       # %bb.0:
; MIPS-64-LE-NEXT:    daddiu $1, $zero, 16
; MIPS-64-LE-NEXT:    ld $2, 0($1)
; MIPS-64-LE-NEXT:    daddiu $3, $zero, 24
; MIPS-64-LE-NEXT:    ld $4, 0($3)
; MIPS-64-LE-NEXT:    sd $4, 0($3)
; MIPS-64-LE-NEXT:    sd $2, 0($1)
; MIPS-64-LE-NEXT:    daddiu $2, $zero, 8
; MIPS-64-LE-NEXT:    ld $4, 0($2)
; MIPS-64-LE-NEXT:    sd $4, 0($2)
; MIPS-64-LE-NEXT:    ld $4, 0($zero)
; MIPS-64-LE-NEXT:    sd $4, 0($zero)
; MIPS-64-LE-NEXT:    sd $zero, 0($3)
; MIPS-64-LE-NEXT:    sd $zero, 0($1)
; MIPS-64-LE-NEXT:    sd $zero, 0($2)
; MIPS-64-LE-NEXT:    jr $ra
; MIPS-64-LE-NEXT:    sd $zero, 0($zero)
    call void @llvm.memcpy.p0.p0.i32(ptr null, ptr null, i32 32, i1 true)
    call void @llvm.memset.p0.i32(ptr null, i8 0, i32 32, i1 true)
    ret void
}

define void @memop_noimplicitfloat() noimplicitfloat {
; MIPS-32-BE-LABEL: memop_noimplicitfloat:
; MIPS-32-BE:       # %bb.0:
; MIPS-32-BE-NEXT:    addiu $1, $zero, 20
; MIPS-32-BE-NEXT:    addiu $2, $zero, 16
; MIPS-32-BE-NEXT:    addiu $3, $zero, 12
; MIPS-32-BE-NEXT:    addiu $4, $zero, 8
; MIPS-32-BE-NEXT:    lw $5, 0($4)
; MIPS-32-BE-NEXT:    lw $6, 0($3)
; MIPS-32-BE-NEXT:    lw $7, 0($2)
; MIPS-32-BE-NEXT:    lw $8, 0($1)
; MIPS-32-BE-NEXT:    addiu $9, $zero, 24
; MIPS-32-BE-NEXT:    lw $10, 0($9)
; MIPS-32-BE-NEXT:    addiu $11, $zero, 28
; MIPS-32-BE-NEXT:    lw $12, 0($11)
; MIPS-32-BE-NEXT:    sw $12, 0($11)
; MIPS-32-BE-NEXT:    sw $10, 0($9)
; MIPS-32-BE-NEXT:    sw $8, 0($1)
; MIPS-32-BE-NEXT:    sw $7, 0($2)
; MIPS-32-BE-NEXT:    sw $6, 0($3)
; MIPS-32-BE-NEXT:    sw $5, 0($4)
; MIPS-32-BE-NEXT:    addiu $5, $zero, 4
; MIPS-32-BE-NEXT:    lw $6, 0($5)
; MIPS-32-BE-NEXT:    sw $6, 0($5)
; MIPS-32-BE-NEXT:    lw $6, 0($zero)
; MIPS-32-BE-NEXT:    sw $6, 0($zero)
; MIPS-32-BE-NEXT:    sw $zero, 0($11)
; MIPS-32-BE-NEXT:    sw $zero, 0($9)
; MIPS-32-BE-NEXT:    sw $zero, 0($1)
; MIPS-32-BE-NEXT:    sw $zero, 0($2)
; MIPS-32-BE-NEXT:    sw $zero, 0($3)
; MIPS-32-BE-NEXT:    sw $zero, 0($4)
; MIPS-32-BE-NEXT:    sw $zero, 0($5)
; MIPS-32-BE-NEXT:    jr $ra
; MIPS-32-BE-NEXT:    sw $zero, 0($zero)
;
; MIPS-32-LE-LABEL: memop_noimplicitfloat:
; MIPS-32-LE:       # %bb.0:
; MIPS-32-LE-NEXT:    addiu $1, $zero, 20
; MIPS-32-LE-NEXT:    addiu $2, $zero, 16
; MIPS-32-LE-NEXT:    addiu $3, $zero, 12
; MIPS-32-LE-NEXT:    addiu $4, $zero, 8
; MIPS-32-LE-NEXT:    lw $5, 0($4)
; MIPS-32-LE-NEXT:    lw $6, 0($3)
; MIPS-32-LE-NEXT:    lw $7, 0($2)
; MIPS-32-LE-NEXT:    lw $8, 0($1)
; MIPS-32-LE-NEXT:    addiu $9, $zero, 24
; MIPS-32-LE-NEXT:    lw $10, 0($9)
; MIPS-32-LE-NEXT:    addiu $11, $zero, 28
; MIPS-32-LE-NEXT:    lw $12, 0($11)
; MIPS-32-LE-NEXT:    sw $12, 0($11)
; MIPS-32-LE-NEXT:    sw $10, 0($9)
; MIPS-32-LE-NEXT:    sw $8, 0($1)
; MIPS-32-LE-NEXT:    sw $7, 0($2)
; MIPS-32-LE-NEXT:    sw $6, 0($3)
; MIPS-32-LE-NEXT:    sw $5, 0($4)
; MIPS-32-LE-NEXT:    addiu $5, $zero, 4
; MIPS-32-LE-NEXT:    lw $6, 0($5)
; MIPS-32-LE-NEXT:    sw $6, 0($5)
; MIPS-32-LE-NEXT:    lw $6, 0($zero)
; MIPS-32-LE-NEXT:    sw $6, 0($zero)
; MIPS-32-LE-NEXT:    sw $zero, 0($11)
; MIPS-32-LE-NEXT:    sw $zero, 0($9)
; MIPS-32-LE-NEXT:    sw $zero, 0($1)
; MIPS-32-LE-NEXT:    sw $zero, 0($2)
; MIPS-32-LE-NEXT:    sw $zero, 0($3)
; MIPS-32-LE-NEXT:    sw $zero, 0($4)
; MIPS-32-LE-NEXT:    sw $zero, 0($5)
; MIPS-32-LE-NEXT:    jr $ra
; MIPS-32-LE-NEXT:    sw $zero, 0($zero)
;
; MIPS-64-BE-LABEL: memop_noimplicitfloat:
; MIPS-64-BE:       # %bb.0:
; MIPS-64-BE-NEXT:    daddiu $1, $zero, 16
; MIPS-64-BE-NEXT:    ld $2, 0($1)
; MIPS-64-BE-NEXT:    daddiu $3, $zero, 24
; MIPS-64-BE-NEXT:    ld $4, 0($3)
; MIPS-64-BE-NEXT:    sd $4, 0($3)
; MIPS-64-BE-NEXT:    sd $2, 0($1)
; MIPS-64-BE-NEXT:    daddiu $2, $zero, 8
; MIPS-64-BE-NEXT:    ld $4, 0($2)
; MIPS-64-BE-NEXT:    sd $4, 0($2)
; MIPS-64-BE-NEXT:    ld $4, 0($zero)
; MIPS-64-BE-NEXT:    sd $4, 0($zero)
; MIPS-64-BE-NEXT:    sd $zero, 0($3)
; MIPS-64-BE-NEXT:    sd $zero, 0($1)
; MIPS-64-BE-NEXT:    sd $zero, 0($2)
; MIPS-64-BE-NEXT:    jr $ra
; MIPS-64-BE-NEXT:    sd $zero, 0($zero)
;
; MIPS-64-LE-LABEL: memop_noimplicitfloat:
; MIPS-64-LE:       # %bb.0:
; MIPS-64-LE-NEXT:    daddiu $1, $zero, 16
; MIPS-64-LE-NEXT:    ld $2, 0($1)
; MIPS-64-LE-NEXT:    daddiu $3, $zero, 24
; MIPS-64-LE-NEXT:    ld $4, 0($3)
; MIPS-64-LE-NEXT:    sd $4, 0($3)
; MIPS-64-LE-NEXT:    sd $2, 0($1)
; MIPS-64-LE-NEXT:    daddiu $2, $zero, 8
; MIPS-64-LE-NEXT:    ld $4, 0($2)
; MIPS-64-LE-NEXT:    sd $4, 0($2)
; MIPS-64-LE-NEXT:    ld $4, 0($zero)
; MIPS-64-LE-NEXT:    sd $4, 0($zero)
; MIPS-64-LE-NEXT:    sd $zero, 0($3)
; MIPS-64-LE-NEXT:    sd $zero, 0($1)
; MIPS-64-LE-NEXT:    sd $zero, 0($2)
; MIPS-64-LE-NEXT:    jr $ra
; MIPS-64-LE-NEXT:    sd $zero, 0($zero)
    call void @llvm.memcpy.p0.p0.i32(ptr null, ptr null, i32 32, i1 true)
    call void @llvm.memset.p0.i32(ptr null, i8 0, i32 32, i1 true)
    ret void
}

declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) nocallback nofree nounwind willreturn memory(argmem: write)
