; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=i386 < %s | FileCheck %s -check-prefix X86-32
; RUN: llc -mtriple=i386 -mattr +sse < %s | FileCheck %s -check-prefix X86-32-SSE1
; RUN: llc -mtriple=i386 -mattr +sse2 < %s | FileCheck %s -check-prefix X86-32-SSE2
; RUN: llc -mtriple=i386 -mattr +avx < %s | FileCheck %s -check-prefix X86-32-AVX
; RUN: llc -mtriple=i386 -mattr +avx512f,+evex512 < %s | FileCheck %s -check-prefix X86-32-AVX512
; RUN: llc -mtriple=x86_64 -mattr -sse2,-sse < %s | FileCheck %s -check-prefix X86-64
; RUN: llc -mtriple=x86_64 -mattr -sse2,+sse < %s | FileCheck %s -check-prefix X86-64-SSE1
; RUN: llc -mtriple=x86_64 < %s | FileCheck %s -check-prefix X86-64-SSE2
; RUN: llc -mtriple=x86_64 -mattr +avx < %s | FileCheck %s -check-prefix X86-64-AVX
; RUN: llc -mtriple=x86_64 -mattr +avx512f,+evex512 < %s | FileCheck %s -check-prefix X86-64-AVX512

define void @memop_soft_float() "use-soft-float"="true" {
; X86-32-LABEL: memop_soft_float:
; X86-32:       # %bb.0:
; X86-32-NEXT:    movl 28, %eax
; X86-32-NEXT:    movl %eax, 28
; X86-32-NEXT:    movl 24, %eax
; X86-32-NEXT:    movl %eax, 24
; X86-32-NEXT:    movl 20, %eax
; X86-32-NEXT:    movl %eax, 20
; X86-32-NEXT:    movl 16, %eax
; X86-32-NEXT:    movl %eax, 16
; X86-32-NEXT:    movl 12, %eax
; X86-32-NEXT:    movl %eax, 12
; X86-32-NEXT:    movl 8, %eax
; X86-32-NEXT:    movl %eax, 8
; X86-32-NEXT:    movl 0, %eax
; X86-32-NEXT:    movl 4, %ecx
; X86-32-NEXT:    movl %ecx, 4
; X86-32-NEXT:    movl %eax, 0
; X86-32-NEXT:    movl $0, 28
; X86-32-NEXT:    movl $0, 24
; X86-32-NEXT:    movl $0, 20
; X86-32-NEXT:    movl $0, 16
; X86-32-NEXT:    movl $0, 12
; X86-32-NEXT:    movl $0, 8
; X86-32-NEXT:    movl $0, 4
; X86-32-NEXT:    movl $0, 0
; X86-32-NEXT:    retl
;
; X86-32-SSE1-LABEL: memop_soft_float:
; X86-32-SSE1:       # %bb.0:
; X86-32-SSE1-NEXT:    movl 28, %eax
; X86-32-SSE1-NEXT:    movl %eax, 28
; X86-32-SSE1-NEXT:    movl 24, %eax
; X86-32-SSE1-NEXT:    movl %eax, 24
; X86-32-SSE1-NEXT:    movl 20, %eax
; X86-32-SSE1-NEXT:    movl %eax, 20
; X86-32-SSE1-NEXT:    movl 16, %eax
; X86-32-SSE1-NEXT:    movl %eax, 16
; X86-32-SSE1-NEXT:    movl 12, %eax
; X86-32-SSE1-NEXT:    movl %eax, 12
; X86-32-SSE1-NEXT:    movl 8, %eax
; X86-32-SSE1-NEXT:    movl %eax, 8
; X86-32-SSE1-NEXT:    movl 0, %eax
; X86-32-SSE1-NEXT:    movl 4, %ecx
; X86-32-SSE1-NEXT:    movl %ecx, 4
; X86-32-SSE1-NEXT:    movl %eax, 0
; X86-32-SSE1-NEXT:    movl $0, 28
; X86-32-SSE1-NEXT:    movl $0, 24
; X86-32-SSE1-NEXT:    movl $0, 20
; X86-32-SSE1-NEXT:    movl $0, 16
; X86-32-SSE1-NEXT:    movl $0, 12
; X86-32-SSE1-NEXT:    movl $0, 8
; X86-32-SSE1-NEXT:    movl $0, 4
; X86-32-SSE1-NEXT:    movl $0, 0
; X86-32-SSE1-NEXT:    retl
;
; X86-32-SSE2-LABEL: memop_soft_float:
; X86-32-SSE2:       # %bb.0:
; X86-32-SSE2-NEXT:    movl 28, %eax
; X86-32-SSE2-NEXT:    movl %eax, 28
; X86-32-SSE2-NEXT:    movl 24, %eax
; X86-32-SSE2-NEXT:    movl %eax, 24
; X86-32-SSE2-NEXT:    movl 20, %eax
; X86-32-SSE2-NEXT:    movl %eax, 20
; X86-32-SSE2-NEXT:    movl 16, %eax
; X86-32-SSE2-NEXT:    movl %eax, 16
; X86-32-SSE2-NEXT:    movl 12, %eax
; X86-32-SSE2-NEXT:    movl %eax, 12
; X86-32-SSE2-NEXT:    movl 8, %eax
; X86-32-SSE2-NEXT:    movl %eax, 8
; X86-32-SSE2-NEXT:    movl 0, %eax
; X86-32-SSE2-NEXT:    movl 4, %ecx
; X86-32-SSE2-NEXT:    movl %ecx, 4
; X86-32-SSE2-NEXT:    movl %eax, 0
; X86-32-SSE2-NEXT:    movl $0, 28
; X86-32-SSE2-NEXT:    movl $0, 24
; X86-32-SSE2-NEXT:    movl $0, 20
; X86-32-SSE2-NEXT:    movl $0, 16
; X86-32-SSE2-NEXT:    movl $0, 12
; X86-32-SSE2-NEXT:    movl $0, 8
; X86-32-SSE2-NEXT:    movl $0, 4
; X86-32-SSE2-NEXT:    movl $0, 0
; X86-32-SSE2-NEXT:    retl
;
; X86-32-AVX-LABEL: memop_soft_float:
; X86-32-AVX:       # %bb.0:
; X86-32-AVX-NEXT:    movl 28, %eax
; X86-32-AVX-NEXT:    movl %eax, 28
; X86-32-AVX-NEXT:    movl 24, %eax
; X86-32-AVX-NEXT:    movl %eax, 24
; X86-32-AVX-NEXT:    movl 20, %eax
; X86-32-AVX-NEXT:    movl %eax, 20
; X86-32-AVX-NEXT:    movl 16, %eax
; X86-32-AVX-NEXT:    movl %eax, 16
; X86-32-AVX-NEXT:    movl 12, %eax
; X86-32-AVX-NEXT:    movl %eax, 12
; X86-32-AVX-NEXT:    movl 8, %eax
; X86-32-AVX-NEXT:    movl %eax, 8
; X86-32-AVX-NEXT:    movl 0, %eax
; X86-32-AVX-NEXT:    movl 4, %ecx
; X86-32-AVX-NEXT:    movl %ecx, 4
; X86-32-AVX-NEXT:    movl %eax, 0
; X86-32-AVX-NEXT:    movl $0, 28
; X86-32-AVX-NEXT:    movl $0, 24
; X86-32-AVX-NEXT:    movl $0, 20
; X86-32-AVX-NEXT:    movl $0, 16
; X86-32-AVX-NEXT:    movl $0, 12
; X86-32-AVX-NEXT:    movl $0, 8
; X86-32-AVX-NEXT:    movl $0, 4
; X86-32-AVX-NEXT:    movl $0, 0
; X86-32-AVX-NEXT:    retl
;
; X86-32-AVX512-LABEL: memop_soft_float:
; X86-32-AVX512:       # %bb.0:
; X86-32-AVX512-NEXT:    movl 28, %eax
; X86-32-AVX512-NEXT:    movl %eax, 28
; X86-32-AVX512-NEXT:    movl 24, %eax
; X86-32-AVX512-NEXT:    movl %eax, 24
; X86-32-AVX512-NEXT:    movl 20, %eax
; X86-32-AVX512-NEXT:    movl %eax, 20
; X86-32-AVX512-NEXT:    movl 16, %eax
; X86-32-AVX512-NEXT:    movl %eax, 16
; X86-32-AVX512-NEXT:    movl 12, %eax
; X86-32-AVX512-NEXT:    movl %eax, 12
; X86-32-AVX512-NEXT:    movl 8, %eax
; X86-32-AVX512-NEXT:    movl %eax, 8
; X86-32-AVX512-NEXT:    movl 0, %eax
; X86-32-AVX512-NEXT:    movl 4, %ecx
; X86-32-AVX512-NEXT:    movl %ecx, 4
; X86-32-AVX512-NEXT:    movl %eax, 0
; X86-32-AVX512-NEXT:    movl $0, 28
; X86-32-AVX512-NEXT:    movl $0, 24
; X86-32-AVX512-NEXT:    movl $0, 20
; X86-32-AVX512-NEXT:    movl $0, 16
; X86-32-AVX512-NEXT:    movl $0, 12
; X86-32-AVX512-NEXT:    movl $0, 8
; X86-32-AVX512-NEXT:    movl $0, 4
; X86-32-AVX512-NEXT:    movl $0, 0
; X86-32-AVX512-NEXT:    retl
;
; X86-64-LABEL: memop_soft_float:
; X86-64:       # %bb.0:
; X86-64-NEXT:    movq 24, %rax
; X86-64-NEXT:    movq %rax, 24
; X86-64-NEXT:    movq 16, %rax
; X86-64-NEXT:    movq %rax, 16
; X86-64-NEXT:    movq 0, %rax
; X86-64-NEXT:    movq 8, %rcx
; X86-64-NEXT:    movq %rcx, 8
; X86-64-NEXT:    movq %rax, 0
; X86-64-NEXT:    movq $0, 24
; X86-64-NEXT:    movq $0, 16
; X86-64-NEXT:    movq $0, 8
; X86-64-NEXT:    movq $0, 0
; X86-64-NEXT:    retq
;
; X86-64-SSE1-LABEL: memop_soft_float:
; X86-64-SSE1:       # %bb.0:
; X86-64-SSE1-NEXT:    movq 24, %rax
; X86-64-SSE1-NEXT:    movq %rax, 24
; X86-64-SSE1-NEXT:    movq 16, %rax
; X86-64-SSE1-NEXT:    movq %rax, 16
; X86-64-SSE1-NEXT:    movq 0, %rax
; X86-64-SSE1-NEXT:    movq 8, %rcx
; X86-64-SSE1-NEXT:    movq %rcx, 8
; X86-64-SSE1-NEXT:    movq %rax, 0
; X86-64-SSE1-NEXT:    movq $0, 24
; X86-64-SSE1-NEXT:    movq $0, 16
; X86-64-SSE1-NEXT:    movq $0, 8
; X86-64-SSE1-NEXT:    movq $0, 0
; X86-64-SSE1-NEXT:    retq
;
; X86-64-SSE2-LABEL: memop_soft_float:
; X86-64-SSE2:       # %bb.0:
; X86-64-SSE2-NEXT:    movq 24, %rax
; X86-64-SSE2-NEXT:    movq %rax, 24
; X86-64-SSE2-NEXT:    movq 16, %rax
; X86-64-SSE2-NEXT:    movq %rax, 16
; X86-64-SSE2-NEXT:    movq 0, %rax
; X86-64-SSE2-NEXT:    movq 8, %rcx
; X86-64-SSE2-NEXT:    movq %rcx, 8
; X86-64-SSE2-NEXT:    movq %rax, 0
; X86-64-SSE2-NEXT:    movq $0, 24
; X86-64-SSE2-NEXT:    movq $0, 16
; X86-64-SSE2-NEXT:    movq $0, 8
; X86-64-SSE2-NEXT:    movq $0, 0
; X86-64-SSE2-NEXT:    retq
;
; X86-64-AVX-LABEL: memop_soft_float:
; X86-64-AVX:       # %bb.0:
; X86-64-AVX-NEXT:    movq 24, %rax
; X86-64-AVX-NEXT:    movq %rax, 24
; X86-64-AVX-NEXT:    movq 16, %rax
; X86-64-AVX-NEXT:    movq %rax, 16
; X86-64-AVX-NEXT:    movq 0, %rax
; X86-64-AVX-NEXT:    movq 8, %rcx
; X86-64-AVX-NEXT:    movq %rcx, 8
; X86-64-AVX-NEXT:    movq %rax, 0
; X86-64-AVX-NEXT:    movq $0, 24
; X86-64-AVX-NEXT:    movq $0, 16
; X86-64-AVX-NEXT:    movq $0, 8
; X86-64-AVX-NEXT:    movq $0, 0
; X86-64-AVX-NEXT:    retq
;
; X86-64-AVX512-LABEL: memop_soft_float:
; X86-64-AVX512:       # %bb.0:
; X86-64-AVX512-NEXT:    movq 24, %rax
; X86-64-AVX512-NEXT:    movq %rax, 24
; X86-64-AVX512-NEXT:    movq 16, %rax
; X86-64-AVX512-NEXT:    movq %rax, 16
; X86-64-AVX512-NEXT:    movq 0, %rax
; X86-64-AVX512-NEXT:    movq 8, %rcx
; X86-64-AVX512-NEXT:    movq %rcx, 8
; X86-64-AVX512-NEXT:    movq %rax, 0
; X86-64-AVX512-NEXT:    movq $0, 24
; X86-64-AVX512-NEXT:    movq $0, 16
; X86-64-AVX512-NEXT:    movq $0, 8
; X86-64-AVX512-NEXT:    movq $0, 0
; X86-64-AVX512-NEXT:    retq
    call void @llvm.memcpy.p0.p0.i32(ptr null, ptr null, i32 32, i1 true)
    call void @llvm.memset.p0.i32(ptr null, i8 0, i32 32, i1 true)
    ret void
}

define void @memop_noimplicitfloat() noimplicitfloat {
; X86-32-LABEL: memop_noimplicitfloat:
; X86-32:       # %bb.0:
; X86-32-NEXT:    movl 28, %eax
; X86-32-NEXT:    movl %eax, 28
; X86-32-NEXT:    movl 24, %eax
; X86-32-NEXT:    movl %eax, 24
; X86-32-NEXT:    movl 20, %eax
; X86-32-NEXT:    movl %eax, 20
; X86-32-NEXT:    movl 16, %eax
; X86-32-NEXT:    movl %eax, 16
; X86-32-NEXT:    movl 12, %eax
; X86-32-NEXT:    movl %eax, 12
; X86-32-NEXT:    movl 8, %eax
; X86-32-NEXT:    movl %eax, 8
; X86-32-NEXT:    movl 0, %eax
; X86-32-NEXT:    movl 4, %ecx
; X86-32-NEXT:    movl %ecx, 4
; X86-32-NEXT:    movl %eax, 0
; X86-32-NEXT:    movl $0, 28
; X86-32-NEXT:    movl $0, 24
; X86-32-NEXT:    movl $0, 20
; X86-32-NEXT:    movl $0, 16
; X86-32-NEXT:    movl $0, 12
; X86-32-NEXT:    movl $0, 8
; X86-32-NEXT:    movl $0, 4
; X86-32-NEXT:    movl $0, 0
; X86-32-NEXT:    retl
;
; X86-32-SSE1-LABEL: memop_noimplicitfloat:
; X86-32-SSE1:       # %bb.0:
; X86-32-SSE1-NEXT:    movl 28, %eax
; X86-32-SSE1-NEXT:    movl %eax, 28
; X86-32-SSE1-NEXT:    movl 24, %eax
; X86-32-SSE1-NEXT:    movl %eax, 24
; X86-32-SSE1-NEXT:    movl 20, %eax
; X86-32-SSE1-NEXT:    movl %eax, 20
; X86-32-SSE1-NEXT:    movl 16, %eax
; X86-32-SSE1-NEXT:    movl %eax, 16
; X86-32-SSE1-NEXT:    movl 12, %eax
; X86-32-SSE1-NEXT:    movl %eax, 12
; X86-32-SSE1-NEXT:    movl 8, %eax
; X86-32-SSE1-NEXT:    movl %eax, 8
; X86-32-SSE1-NEXT:    movl 0, %eax
; X86-32-SSE1-NEXT:    movl 4, %ecx
; X86-32-SSE1-NEXT:    movl %ecx, 4
; X86-32-SSE1-NEXT:    movl %eax, 0
; X86-32-SSE1-NEXT:    movl $0, 28
; X86-32-SSE1-NEXT:    movl $0, 24
; X86-32-SSE1-NEXT:    movl $0, 20
; X86-32-SSE1-NEXT:    movl $0, 16
; X86-32-SSE1-NEXT:    movl $0, 12
; X86-32-SSE1-NEXT:    movl $0, 8
; X86-32-SSE1-NEXT:    movl $0, 4
; X86-32-SSE1-NEXT:    movl $0, 0
; X86-32-SSE1-NEXT:    retl
;
; X86-32-SSE2-LABEL: memop_noimplicitfloat:
; X86-32-SSE2:       # %bb.0:
; X86-32-SSE2-NEXT:    movl 28, %eax
; X86-32-SSE2-NEXT:    movl %eax, 28
; X86-32-SSE2-NEXT:    movl 24, %eax
; X86-32-SSE2-NEXT:    movl %eax, 24
; X86-32-SSE2-NEXT:    movl 20, %eax
; X86-32-SSE2-NEXT:    movl %eax, 20
; X86-32-SSE2-NEXT:    movl 16, %eax
; X86-32-SSE2-NEXT:    movl %eax, 16
; X86-32-SSE2-NEXT:    movl 12, %eax
; X86-32-SSE2-NEXT:    movl %eax, 12
; X86-32-SSE2-NEXT:    movl 8, %eax
; X86-32-SSE2-NEXT:    movl %eax, 8
; X86-32-SSE2-NEXT:    movl 0, %eax
; X86-32-SSE2-NEXT:    movl 4, %ecx
; X86-32-SSE2-NEXT:    movl %ecx, 4
; X86-32-SSE2-NEXT:    movl %eax, 0
; X86-32-SSE2-NEXT:    movl $0, 28
; X86-32-SSE2-NEXT:    movl $0, 24
; X86-32-SSE2-NEXT:    movl $0, 20
; X86-32-SSE2-NEXT:    movl $0, 16
; X86-32-SSE2-NEXT:    movl $0, 12
; X86-32-SSE2-NEXT:    movl $0, 8
; X86-32-SSE2-NEXT:    movl $0, 4
; X86-32-SSE2-NEXT:    movl $0, 0
; X86-32-SSE2-NEXT:    retl
;
; X86-32-AVX-LABEL: memop_noimplicitfloat:
; X86-32-AVX:       # %bb.0:
; X86-32-AVX-NEXT:    movl 28, %eax
; X86-32-AVX-NEXT:    movl %eax, 28
; X86-32-AVX-NEXT:    movl 24, %eax
; X86-32-AVX-NEXT:    movl %eax, 24
; X86-32-AVX-NEXT:    movl 20, %eax
; X86-32-AVX-NEXT:    movl %eax, 20
; X86-32-AVX-NEXT:    movl 16, %eax
; X86-32-AVX-NEXT:    movl %eax, 16
; X86-32-AVX-NEXT:    movl 12, %eax
; X86-32-AVX-NEXT:    movl %eax, 12
; X86-32-AVX-NEXT:    movl 8, %eax
; X86-32-AVX-NEXT:    movl %eax, 8
; X86-32-AVX-NEXT:    movl 0, %eax
; X86-32-AVX-NEXT:    movl 4, %ecx
; X86-32-AVX-NEXT:    movl %ecx, 4
; X86-32-AVX-NEXT:    movl %eax, 0
; X86-32-AVX-NEXT:    movl $0, 28
; X86-32-AVX-NEXT:    movl $0, 24
; X86-32-AVX-NEXT:    movl $0, 20
; X86-32-AVX-NEXT:    movl $0, 16
; X86-32-AVX-NEXT:    movl $0, 12
; X86-32-AVX-NEXT:    movl $0, 8
; X86-32-AVX-NEXT:    movl $0, 4
; X86-32-AVX-NEXT:    movl $0, 0
; X86-32-AVX-NEXT:    retl
;
; X86-32-AVX512-LABEL: memop_noimplicitfloat:
; X86-32-AVX512:       # %bb.0:
; X86-32-AVX512-NEXT:    movl 28, %eax
; X86-32-AVX512-NEXT:    movl %eax, 28
; X86-32-AVX512-NEXT:    movl 24, %eax
; X86-32-AVX512-NEXT:    movl %eax, 24
; X86-32-AVX512-NEXT:    movl 20, %eax
; X86-32-AVX512-NEXT:    movl %eax, 20
; X86-32-AVX512-NEXT:    movl 16, %eax
; X86-32-AVX512-NEXT:    movl %eax, 16
; X86-32-AVX512-NEXT:    movl 12, %eax
; X86-32-AVX512-NEXT:    movl %eax, 12
; X86-32-AVX512-NEXT:    movl 8, %eax
; X86-32-AVX512-NEXT:    movl %eax, 8
; X86-32-AVX512-NEXT:    movl 0, %eax
; X86-32-AVX512-NEXT:    movl 4, %ecx
; X86-32-AVX512-NEXT:    movl %ecx, 4
; X86-32-AVX512-NEXT:    movl %eax, 0
; X86-32-AVX512-NEXT:    movl $0, 28
; X86-32-AVX512-NEXT:    movl $0, 24
; X86-32-AVX512-NEXT:    movl $0, 20
; X86-32-AVX512-NEXT:    movl $0, 16
; X86-32-AVX512-NEXT:    movl $0, 12
; X86-32-AVX512-NEXT:    movl $0, 8
; X86-32-AVX512-NEXT:    movl $0, 4
; X86-32-AVX512-NEXT:    movl $0, 0
; X86-32-AVX512-NEXT:    retl
;
; X86-64-LABEL: memop_noimplicitfloat:
; X86-64:       # %bb.0:
; X86-64-NEXT:    movq 24, %rax
; X86-64-NEXT:    movq %rax, 24
; X86-64-NEXT:    movq 16, %rax
; X86-64-NEXT:    movq %rax, 16
; X86-64-NEXT:    movq 0, %rax
; X86-64-NEXT:    movq 8, %rcx
; X86-64-NEXT:    movq %rcx, 8
; X86-64-NEXT:    movq %rax, 0
; X86-64-NEXT:    movq $0, 24
; X86-64-NEXT:    movq $0, 16
; X86-64-NEXT:    movq $0, 8
; X86-64-NEXT:    movq $0, 0
; X86-64-NEXT:    retq
;
; X86-64-SSE1-LABEL: memop_noimplicitfloat:
; X86-64-SSE1:       # %bb.0:
; X86-64-SSE1-NEXT:    movq 24, %rax
; X86-64-SSE1-NEXT:    movq %rax, 24
; X86-64-SSE1-NEXT:    movq 16, %rax
; X86-64-SSE1-NEXT:    movq %rax, 16
; X86-64-SSE1-NEXT:    movq 0, %rax
; X86-64-SSE1-NEXT:    movq 8, %rcx
; X86-64-SSE1-NEXT:    movq %rcx, 8
; X86-64-SSE1-NEXT:    movq %rax, 0
; X86-64-SSE1-NEXT:    movq $0, 24
; X86-64-SSE1-NEXT:    movq $0, 16
; X86-64-SSE1-NEXT:    movq $0, 8
; X86-64-SSE1-NEXT:    movq $0, 0
; X86-64-SSE1-NEXT:    retq
;
; X86-64-SSE2-LABEL: memop_noimplicitfloat:
; X86-64-SSE2:       # %bb.0:
; X86-64-SSE2-NEXT:    movq 24, %rax
; X86-64-SSE2-NEXT:    movq %rax, 24
; X86-64-SSE2-NEXT:    movq 16, %rax
; X86-64-SSE2-NEXT:    movq %rax, 16
; X86-64-SSE2-NEXT:    movq 0, %rax
; X86-64-SSE2-NEXT:    movq 8, %rcx
; X86-64-SSE2-NEXT:    movq %rcx, 8
; X86-64-SSE2-NEXT:    movq %rax, 0
; X86-64-SSE2-NEXT:    movq $0, 24
; X86-64-SSE2-NEXT:    movq $0, 16
; X86-64-SSE2-NEXT:    movq $0, 8
; X86-64-SSE2-NEXT:    movq $0, 0
; X86-64-SSE2-NEXT:    retq
;
; X86-64-AVX-LABEL: memop_noimplicitfloat:
; X86-64-AVX:       # %bb.0:
; X86-64-AVX-NEXT:    movq 24, %rax
; X86-64-AVX-NEXT:    movq %rax, 24
; X86-64-AVX-NEXT:    movq 16, %rax
; X86-64-AVX-NEXT:    movq %rax, 16
; X86-64-AVX-NEXT:    movq 0, %rax
; X86-64-AVX-NEXT:    movq 8, %rcx
; X86-64-AVX-NEXT:    movq %rcx, 8
; X86-64-AVX-NEXT:    movq %rax, 0
; X86-64-AVX-NEXT:    movq $0, 24
; X86-64-AVX-NEXT:    movq $0, 16
; X86-64-AVX-NEXT:    movq $0, 8
; X86-64-AVX-NEXT:    movq $0, 0
; X86-64-AVX-NEXT:    retq
;
; X86-64-AVX512-LABEL: memop_noimplicitfloat:
; X86-64-AVX512:       # %bb.0:
; X86-64-AVX512-NEXT:    movq 24, %rax
; X86-64-AVX512-NEXT:    movq %rax, 24
; X86-64-AVX512-NEXT:    movq 16, %rax
; X86-64-AVX512-NEXT:    movq %rax, 16
; X86-64-AVX512-NEXT:    movq 0, %rax
; X86-64-AVX512-NEXT:    movq 8, %rcx
; X86-64-AVX512-NEXT:    movq %rcx, 8
; X86-64-AVX512-NEXT:    movq %rax, 0
; X86-64-AVX512-NEXT:    movq $0, 24
; X86-64-AVX512-NEXT:    movq $0, 16
; X86-64-AVX512-NEXT:    movq $0, 8
; X86-64-AVX512-NEXT:    movq $0, 0
; X86-64-AVX512-NEXT:    retq
    call void @llvm.memcpy.p0.p0.i32(ptr null, ptr null, i32 32, i1 true)
    call void @llvm.memset.p0.i32(ptr null, i8 0, i32 32, i1 true)
    ret void
}

declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) nocallback nofree nounwind willreturn memory(argmem: write)
